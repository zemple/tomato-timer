console.log("Tomato Timer background script loaded");chrome.runtime.onInstalled.addListener(()=>{console.log("Tomato Timer installed"),chrome.storage.local.set({completedSessions:0,totalFocusTime:0,lastSessionDate:new Date().toDateString()}),c()});async function c(){try{const e=await chrome.notifications.getPermissionLevel();console.log("Current notification permission:",e),e==="denied"&&console.warn("Notifications are denied. Please enable them in Chrome settings.")}catch(e){console.error("Error checking notification permission:",e)}}chrome.runtime.onMessage.addListener((e,o,t)=>{switch(console.log("Received message:",e),e.type){case"START_TIMER":l(e.duration,e.phase),t({success:!0});break;case"STOP_TIMER":m(),t({success:!0});break;case"SESSION_COMPLETED":i(e.phase),t({success:!0});break;case"GET_STATS":return h().then(s=>t(s)),!0;default:t({error:"Unknown message type"})}});function l(e,o){const t=`timer_${o}_${Date.now()}`;chrome.alarms.clearAll();const s=e/60;chrome.alarms.create(t,{delayInMinutes:s}),console.log(`Timer started: ${o} for ${e} seconds (${s} minutes), alarm: ${t}`),chrome.alarms.get(t,r=>{r?console.log("Alarm created successfully:",r):console.error("Failed to create alarm!")})}function m(){chrome.alarms.clearAll(),console.log("All timers stopped")}async function i(e){d(e),e==="work"&&await p(),u()}async function d(e){const o=e==="work",t=o?"ðŸŽ‰ Work Session Completed!":"âœ¨ Break Time Over!",s=o?"Great job! Time for a well-deserved break.":"Break time is over. Ready to get back to work?";try{const r=await chrome.notifications.getPermissionLevel();if(console.log("Notification permission level:",r),r==="denied"){console.warn("Notifications are denied");return}const n=`timer_${e}_${Date.now()}`;chrome.notifications.create(n,{type:"basic",iconUrl:"/icons/icon48.png",title:t,message:s,priority:2,requireInteraction:!0},a=>{chrome.runtime.lastError?(console.error("Notification creation error:",chrome.runtime.lastError),chrome.notifications.create({type:"basic",title:t,message:s,priority:2})):console.log("Notification created successfully:",a)})}catch(r){console.error("Error showing notification:",r)}}function u(){try{chrome.tabs.query({active:!0,currentWindow:!0},e=>{e[0]&&chrome.tabs.executeScript(e[0].id,{code:`
            try {
              const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmYeBjiS0/LNeSsFJHTG8N6QQAoUXrTp66hVFApGn+DyvmYeBjiS0/LNeSsFJHTG8N6QQAoUXrTp66hVFApGn+DyvmYeBjiS0/LNeSsFJHTG8N6QQAoUXrTp66hVFApGn+DyvmYeBjiS0/LNeSsFJHTG8N6QQAoUXrTp66hVFApGn+DyvmYe');
              audio.play().catch(() => {});
            } catch(e) {}
          `})})}catch(e){console.log("Could not play notification sound:",e)}}async function p(){const e=new Date().toDateString();try{const o=await chrome.storage.local.get(["completedSessions","totalFocusTime","lastSessionDate"]);let t=o.completedSessions||0,s=o.totalFocusTime||0;o.lastSessionDate!==e&&(t=0),t++,s+=25,await chrome.storage.local.set({completedSessions:t,totalFocusTime:s,lastSessionDate:e}),console.log(`Stats updated: ${t} sessions, ${s} minutes total`)}catch(o){console.error("Error updating stats:",o)}}async function h(){try{const e=await chrome.storage.local.get(["completedSessions","totalFocusTime","lastSessionDate"]),o=new Date().toDateString();return{completedSessions:e.lastSessionDate===o&&e.completedSessions||0,totalFocusTime:e.totalFocusTime||0}}catch(e){return console.error("Error getting stats:",e),{completedSessions:0,totalFocusTime:0}}}chrome.alarms.onAlarm.addListener(async e=>{if(console.log("ðŸ”” Alarm triggered:",e.name,"at",new Date().toLocaleTimeString()),e.name.includes("timer_")){const o=e.name.split("_")[1];console.log("Processing timer completion for phase:",o),await i(o);try{chrome.runtime.sendMessage({type:"TIMER_COMPLETED",phase:o})}catch{console.log("Popup not available to receive timer completion message")}}});chrome.alarms.onAlarm.addListener(e=>{console.log("All alarms debug - Alarm name:",e.name,"Scheduled time:",new Date(e.scheduledTime))});chrome.notifications.onClicked.addListener(e=>{chrome.notifications.clear(e);try{chrome.action.openPopup()}catch(o){console.log("Could not open popup:",o)}});
